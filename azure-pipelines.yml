trigger:
- master
- rel/*

pool:
  vmImage: vs2017-win2016

variables: 
  BuildConfiguration: Release
  
steps:
- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- script: nbgv cloud -p MS.IoT
  displayName: Set Version
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- task: NodeTool@0
  displayName: Use Node 8.x
  inputs:
    versionSpec: 8.x

- task: Npm@1
  displayName: npm install DataPacketDesigner  
  inputs:
    workingDir: MS.IoT/MS.IoT.DataPacketDesigner.Web
    verbose: false

- task: DotNetCoreCLI@2
  displayName: Build and Publish DataPacketDesigner
  inputs:
    command: publish
    publishWebProjects: false
    projects: MS.IoT/MS.IoT.DataPacketDesigner.Web/MS.IoT.DataPacketDesigner.Web.csproj
    arguments: '-c $(BuildConfiguration) --output $(build.artifactstagingdirectory)\DataPacketDesigner\'
    zipAfterPublish: True

- task: Npm@1
  displayName: npm install DeviceManagementPortal  
  inputs:
    workingDir: MS.IoT/MS.IoT.DeviceManagementPortal.Web
    verbose: false
    
- task: DotNetCoreCLI@2
  displayName: Build and Publish DeviceManagementPortal
  inputs:
    command: publish
    publishWebProjects: false
    projects: MS.IoT/MS.IoT.DeviceManagementPortal.Web/MS.IoT.DeviceManagementPortal.Web.csproj
    arguments: '-c $(BuildConfiguration) --output $(build.artifactstagingdirectory)\DeviceManagementPortal\'
    zipAfterPublish: True

- task: MSBuild@1
  displayName: Build WPF Simulator
  inputs:
    solution: MS.IoT/MS.IoT.Simulator/MS.IoT.Simulator.WPF/MS.IoT.Simulator.WPF.csproj
    msbuildArguments: /restore  
    configuration: $(BuildConfiguration) 
    maximumCpuCount: true
    
- task: ArchiveFiles@1
  displayName: Zip Simulator files
  inputs:
    archiveType: zip
    rootFolder: MS.IoT/MS.IoT.Simulator/MS.IoT.Simulator.WPF/bin/$(BuildConfiguration)
    archiveFile: $(Build.ArtifactStagingDirectory)\Simulator\Simulator.$(Build.BuildNumber).zip
    includeRootFolder: false    
    
- task: PublishBuildArtifacts@1
  displayName: Publish DataPacketDesigner Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\DataPacketDesigner
    artifactType: container
    artifactName: DataPacketDesigner
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))
  
- task: PublishBuildArtifacts@1
  displayName: Publish DeviceManagementPortal Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\DeviceManagementPortal
    artifactType: container
    artifactName: DeviceManagementPortal
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))

- task: PublishBuildArtifacts@1
  displayName: Publish Simulator Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\Simulator
    artifactType: container
    artifactName: Simulator
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))    
